% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis_GMM.R
\name{calculate_nec}
\alias{calculate_nec}
\title{Calculate Normalized Entropy Criterion (NEC)}
\usage{
calculate_nec(model, base_loglik, q = 1)
}
\arguments{
\item{model}{A model object, typically from \code{mclust::Mclust}, which must contain posterior probabilities (\code{model$z}) and log-likelihood (\code{model$loglik}).}

\item{base_loglik}{The log-likelihood of the baseline model (e.g., G=1).}

\item{q}{The entropic-index for the Tsallis entropy calculation. Defaults to 1 (Shannon Entropy).}
}
\value{
A single numeric value representing the NEC.
}
\description{
Calculates the Normalized Entropy Criterion for a given clustering model.
}
\details{
The NEC is used to select the optimal number of clusters. It balances the improvement in model fit (log-likelihood) against the uncertainty in classification (entropy). The NEC is defined as:
\deqn{ NEC(K) = \frac{E(K)}{\log L(K) - \log L(1)} }
where \eqn{K} is the number of clusters.
\itemize{
\item \eqn{E(K)} is the total classification entropy, calculated by summing the entropy of the posterior probability distribution for each observation. This function uses Tsallis entropy for this calculation: \eqn{E(K) = \sum_{i=1}^{N} S_q(z_i)}, where \eqn{z_i} is the vector of posterior probabilities for observation \eqn{i}.
\item \eqn{\log L(K)} is the log-likelihood of the model with \eqn{K} clusters.
\item \eqn{\log L(1)} is the log-likelihood of the baseline model with one cluster.
The optimal number of clusters is the one that minimizes the NEC.
}
}
